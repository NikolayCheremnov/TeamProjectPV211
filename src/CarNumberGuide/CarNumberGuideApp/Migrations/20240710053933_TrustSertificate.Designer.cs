// <auto-generated />
using CarNumberGuideApp.RDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarNumberGuideApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240710053933_TrustSertificate")]
    partial class TrustSertificate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarNumberGuideApp.Entity.Region", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("CarNumberGuideApp.Entity.RegionNumber", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.ToTable("RegionNumbers");
                });

            modelBuilder.Entity("RegistrationNumber", b =>
                {
                    b.Property<string>("SymbolicCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegionNumberCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SymbolicCode");

                    b.HasIndex("RegionNumberCode");

                    b.ToTable("RegistrationNumbers");
                });

            modelBuilder.Entity("CarNumberGuideApp.Entity.RegionNumber", b =>
                {
                    b.HasOne("CarNumberGuideApp.Entity.Region", "Region")
                        .WithMany("RegionNumbers")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("RegistrationNumber", b =>
                {
                    b.HasOne("CarNumberGuideApp.Entity.RegionNumber", "RegionNumber")
                        .WithMany()
                        .HasForeignKey("RegionNumberCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionNumber");
                });

            modelBuilder.Entity("CarNumberGuideApp.Entity.Region", b =>
                {
                    b.Navigation("RegionNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
